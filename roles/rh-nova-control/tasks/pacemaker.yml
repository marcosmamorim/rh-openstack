---

- name: Get Current DC
  shell: pcs status cluster | awk '/^ Current DC:/ {print $3}'
  register: pacemaker_dc
  ignore_errors: True
  no_log: True
  tags:
    - pacemaker

- name: create nova cluster resources
  pcs_resource: command=create resource_id={{ item }} type=systemd:openstack-{{ item }}
  args:
    options:
    operations:
      - action: monitor
        options:
          interval: 10s
      - action: start
        options:
          timeout: 100s
  when: ansible_hostname == pacemaker_dc.stdout
  with_items:
    - nova-scheduler
    - nova-api
    - nova-conductor
    - nova-consoleauth
    - nova-novncproxy
  tags:
    - pacemaker
    - pacemaker-nova


# Colocation
#<rsc_order first="openstack-nova-scheduler-clone" first-action="start" id="order-openstack-nova-scheduler-clone-openstack-nova-conductor-clone-mandatory" then="openstack-nova-conductor-clone" then-action="start"/>
#<rsc_order first="openstack-nova-consoleauth-clone" first-action="start" id="order-openstack-nova-consoleauth-clone-openstack-nova-novncproxy-clone-mandatory" then="openstack-nova-novncproxy-clone" then-action="start"/>
#<rsc_order first="openstack-nova-novncproxy-clone" first-action="start" id="order-openstack-nova-novncproxy-clone-openstack-nova-api-clone-mandatory" then="openstack-nova-api-clone" then-action="start"/>

#<rsc_colocation id="colocation-openstack-nova-scheduler-clone-openstack-nova-api-clone-INFINITY" rsc="openstack-nova-scheduler-clone" score="INFINITY" with-rsc="openstack-nova-api-clone"/>

#- name: create constraint
#  command: pcs constraint colocation add vip-db haproxy-clone INFINITY
#  ignore_errors: True
#  register: command_result
#  when: ansible_hostname == pacemaker_dc.stdout
#  failed_when: "'FAILED' in command_result.stderr"
#  tags:
#    - pacemaker
