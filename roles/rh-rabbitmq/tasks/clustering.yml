---

- name: Killing all RabbitMQ processes
  shell: pkill -9 -u rabbitmq || true

- name: Cleaning RabbitMQ app everywhere 
  file:
    path=/var/lib/rabbitmq/mnesia
    state=absent

- name: force systemctl daemon-reload
  command: systemctl daemon-reload

- name: Starting RabbitMQ service on the master node
  command: systemctl start rabbitmq-server
  when: inventory_hostname == rabbitmq_master
  always_run: True

- name: Starting RabbitMQ App only on master node
  command: /usr/sbin/rabbitmqctl start_app
  when: inventory_hostname == rabbitmq_master

- name: Set the RabbitMQ cluster name
  command: /usr/sbin/rabbitmqctl set_cluster_name "{{ rabbitmq_cluster_name }}"
  when: inventory_hostname == rabbitmq_master

- name: Starting RabbitMQ service everywhere
  command: systemctl start rabbitmq-server
  when: inventory_hostname != rabbitmq_master

- name: Stopping the RabbitMQ application
  command: /usr/sbin/rabbitmqctl stop_app
  when: inventory_hostname != rabbitmq_master

- pause:
    prompt="Waiting few seconds..."
    seconds=5

- name: Making slave nodes joining the RabbitMQ cluster
  command: /usr/sbin/rabbitmqctl join_cluster "rabbit@{{ rabbitmq_master }}"
  when: inventory_hostname != rabbitmq_master

- name: Starting RabbitMQ App only on slave node(s)
  command: /usr/sbin/rabbitmqctl start_app
  when: inventory_hostname != rabbitmq_master

- name: Finalize the setup by creating file /etc/rabbitmq/clustered
  copy:
    content="Cluster created:{{ ansible_date_time.date }}"
    dest=/etc/rabbitmq/clustered
    owner=rabbitmq
    group=rabbitmq
