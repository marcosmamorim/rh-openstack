---

- name: stop and disable cinder services
  service: name={{ item }} state=stopped enabled=no
  with_items:
    - openstack-cinder-api
    - openstack-cinder-scheduler
    - openstack-cinder-volume

- name: create cinder cluster resource
  pcs_resource: command=create resource_id={{ item }} type=systemd:openstack-{{ item }} clone=yes
  tags:
    - pacemaker
    - pacemaker-haproxy
  args:
    options:
    operations:
      - action: monitor
        options:
          interval: 10s
      - action: start
        options:
          timeout: 100s
  when: ansible_hostname == master_server
  with_items:
    - cinder-scheduler
    - cinder-api
    - cinder-volume

#- name: create cinder-volume cluster resource
#  pcs_resource: command=create resource_id={{ item }} type=systemd:openstack-{{ item }}
#  args:
#    options:
#    operations:
#      - action: monitor
#        options:
#          interval: 10s
#      - action: start
#        options:
#          timeout: 100s
#  when: ansible_hostname == master_server
#  with_items:
#    - cinder-volume

# Constraints
- name: create cinder-api constraint to keystone
  command: pcs constraint order keystone-clone then cinder-api-clone kind=Optional
  when: ansible_hostname == master_server

- name: create cinder-api constraint to rabbitmq
  command: pcs constraint order rabbitmq-clone then cinder-api-clone kind=Optional
  when: ansible_hostname == master_server

- name: create cinder-api constraint to memcached
  command: pcs constraint order memcached-clone then cinder-api-clone kind=Optional
  when: ansible_hostname == master_server

- name: create cinder-api constraint to cinder-scheduler
  command: pcs constraint order cinder-api-clone then cinder-scheduler-clone kind=Optional
  when: ansible_hostname == master_server

- name: create cinder-scheduler constraint to cinder-volume
  command: pcs constraint order cinder-scheduler-clone then cinder-volume kind=Optional
  when: ansible_hostname == master_server

- name: create constraint location cinder-volume and cinder-scheduler
  command: pcs constraint colocation add cinder-scheduler-clone cinder-volume-clone INFINITY
  ignore_errors: True
  register: command_result
  when: ansible_hostname == master_server
  failed_when: "'FAILED' in command_result.stderr"
